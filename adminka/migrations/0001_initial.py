# Generated by Django 5.0 on 2023-12-09 00:19

import ckeditor_uploader.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achieve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('value', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, message='Значение должно быть больше нуля или равнятся нулю')], verbose_name='Очки')),
            ],
            options={
                'verbose_name': 'Достижение',
                'verbose_name_plural': 'Достижения',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('course_age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, message='Диапозон должен быть в диапозоне от 0 до 2'), django.core.validators.MaxValueValidator(2, message='Диапозон должен быть в диапозоне от 0 до 2')], verbose_name='Сложность [0;2]')),
                ('url', models.CharField(max_length=255, verbose_name='S3 картинка')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Forward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('forward_text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Вид угрозы',
                'verbose_name_plural': 'Виды угроз',
            },
        ),
        migrations.CreateModel(
            name='LessonTestAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Текст ответа')),
                ('right', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Тест -> answer',
                'verbose_name_plural': 'Тест -> answer',
            },
        ),
        migrations.CreateModel(
            name='LessonTestQuestionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Вид вопроса',
                'verbose_name_plural': 'Виды вопросов',
            },
        ),
        migrations.CreateModel(
            name='LessonType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип урока',
                'verbose_name_plural': 'Типы уроков',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Цена не может быть отрицательной')], verbose_name='Цена')),
                ('url', models.CharField(max_length=255, verbose_name='S3 картинка')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
        ),
        migrations.CreateModel(
            name='ForwardSrc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, verbose_name='Ссылка')),
                ('forward_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.forward', verbose_name='Название атаки')),
            ],
            options={
                'verbose_name': 'Угроза -> media',
                'verbose_name_plural': 'Угроза -> media',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('value', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, message='Значение должно быть больше или равно 0')], verbose_name='Кол-во поинтов за курс')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.course', verbose_name='Курс')),
                ('lesson_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lessontype', verbose_name='Тип урока')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
            },
        ),
        migrations.CreateModel(
            name='LessonMat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('lesson_text', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Текст')),
                ('lesson_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lesson', verbose_name='Урок')),
            ],
            options={
                'verbose_name': 'Урок -> material',
                'verbose_name_plural': 'Урок -> material',
            },
        ),
        migrations.CreateModel(
            name='LessonMatSrc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('url', models.CharField(max_length=255, verbose_name='S3 картинка')),
                ('lesson_mat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lessonmat', verbose_name='Материал урока')),
            ],
            options={
                'verbose_name': 'Урок -> media',
                'verbose_name_plural': 'Урок -> media',
            },
        ),
        migrations.CreateModel(
            name='LessonTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('lesson_text', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Текст')),
                ('lesson_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lesson', verbose_name='Урок')),
            ],
            options={
                'verbose_name': 'Урок -> test',
                'verbose_name_plural': 'Урок -> test',
            },
        ),
        migrations.CreateModel(
            name='LessonTestAnswerSrc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, verbose_name='S3 картинка')),
                ('lesson_test_answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lessontestanswer', verbose_name='Ответ вопроса')),
            ],
            options={
                'verbose_name': 'Ответ -> media',
                'verbose_name_plural': 'Ответ -> media',
            },
        ),
        migrations.CreateModel(
            name='LessonTestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('lesson_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lesson', verbose_name='Задание')),
                ('lesson_test_question_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lessontestquestiontype', verbose_name='Тип задания')),
            ],
            options={
                'verbose_name': 'Тест -> question',
                'verbose_name_plural': 'Тест -> question',
            },
        ),
        migrations.AddField(
            model_name='lessontestanswer',
            name='lesson_test_question_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lessontestquestion', verbose_name='Вопрос'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=250, verbose_name='Почта')),
                ('password_hash', models.CharField(max_length=255, verbose_name='Хэш пароля')),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(6, 'Возраст должнен быть от 6 до 100'), django.core.validators.MaxValueValidator(100, 'Возраст должнен быть от 6 до 100')], verbose_name='Возраст')),
                ('refresh', models.CharField(max_length=100, verbose_name='Рефреш')),
                ('total_points', models.IntegerField(verbose_name='Общее кол-во очков')),
                ('final_exam_current', models.IntegerField(verbose_name='Текущий бал за тест')),
                ('final_exam_max', models.IntegerField(verbose_name='Лучшее решение теста')),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('registration_datetime', models.DateTimeField(auto_now=True)),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.role', verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользовталели',
            },
        ),
        migrations.CreateModel(
            name='UserAchieve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achieve_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.achieve', verbose_name='Достижение')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.customuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Юзер-Достижение',
                'verbose_name_plural': 'Юзер-Достижение',
            },
        ),
        migrations.CreateModel(
            name='UserLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('finish', models.BooleanField(default=False)),
                ('lesson_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.lesson', verbose_name='Урок')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.customuser', verbose_name='Юзер')),
            ],
            options={
                'verbose_name': 'Юзер-Урок',
                'verbose_name_plural': 'Юзер-Урок',
            },
        ),
    ]
